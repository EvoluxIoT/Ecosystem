@model IEnumerable<EvoluxIoT.Models.Synapse.SynapseTemplate>

@{
    ViewData["Title"] = "Index";

    IEnumerable<EvoluxIoT.Models.Synapse.SynapseTemplate> Planning = Model.Where(model => model.BuildStatus == EvoluxIoT.Models.Synapse.SynapseTemplateBuildStatus.Planning);
    IEnumerable<EvoluxIoT.Models.Synapse.SynapseTemplate> Testing = Model.Where(model => model.BuildStatus == EvoluxIoT.Models.Synapse.SynapseTemplateBuildStatus.Testing);
    IEnumerable<EvoluxIoT.Models.Synapse.SynapseTemplate> Production = Model.Where(model => model.BuildStatus == EvoluxIoT.Models.Synapse.SynapseTemplateBuildStatus.Production);
    IEnumerable<EvoluxIoT.Models.Synapse.SynapseTemplate> EndOfLife = Model.Where(model => model.BuildStatus == EvoluxIoT.Models.Synapse.SynapseTemplateBuildStatus.EndOfLife);
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Administration</a></li>
        <li class="breadcrumb-item active" aria-current="page">Synapse Templates</li>
    </ol>
</nav>
<p>
<div class="d-grid gap-2">
    <a class="btn btn-primary" asp-action="Create"><i class="fa-solid fa-add"></i> Create New</a>
</div>
</p>
<div class="accordion" id="accordionPanelsStayOpenExample">
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">

                <span>Planning <span class="badge text-bg-success"> @Planning.Where(model => model.Enabled).Count()</span> <span class="badge text-bg-danger"> @Planning.Where(model => !model.Enabled).Count()</span></span>
            </button>
        </h2>
        <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show">
            <div class="accordion-body">

                @if (Planning.Count() == 0)
                {
                    <p class="text-center">No synapse templates available!</p>
                }

                @foreach (var item in Planning)
                {
                    <div class="card text-center col" style="width:20rem;">
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name) @Html.DisplayFor(modelItem => item.Model)</h5>
                            <p class="card-text"></p>
                            <h6 class="card-subtitle mb-2 text-body-secondary">
                                @if (item.Enabled)
                                {
                                    <span class="badge text-bg-success">Active</span>
                                }
                                else
                                {

                                    <span class="badge text-bg-danger">Inactive</span>
                                }
                                <span class="badge text-bg-primary">ID: @Html.DisplayFor(modelItem => item.Id)</span>
                            </h6>
                            <p></p>
                            <p class="card-text lh-sm">@Html.DisplayFor(modelItem => item.Description)</p>

                            <p></p>
                            <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i></a>
                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen-to-square"></i></a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash"></i></a>

                        </div>
                        <div class="card-footer text-muted">
                            <span class="badge text-bg-light">Created at @Html.DisplayFor(modelItem => item.CreatedAt)</span>
                            <span class="badge text-bg-warning">Updated at @Html.DisplayFor(modelItem => item.UpdatedAt)</span>

                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">

                <span>Testing <span class="badge text-bg-success"> @Testing.Where(model => model.Enabled).Count()</span> <span class="badge text-bg-danger"> @Testing.Where(model => !model.Enabled).Count()</span></span>
            </button>
        </h2>
        <div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse">
            <div class="accordion-body">
                @if (Testing.Count() == 0)
                {
                    <p class="text-center">No synapse templates available!</p>
                }

                @foreach (var item in Testing)
                {
                    <div class="card text-center" style="width:20rem;">
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name) @Html.DisplayFor(modelItem => item.Model)</h5>
                            <p class="card-text"></p>
                            <h6 class="card-subtitle mb-2 text-body-secondary">
                                @if (item.Enabled)
                                {
                                    <span class="badge text-bg-success">Active</span>
                                }
                                else
                                {

                                    <span class="badge text-bg-danger">Inactive</span>
                                }
                                <span class="badge text-bg-primary">ID: @Html.DisplayFor(modelItem => item.Id)</span>
                            </h6>
                            <p></p>
                            <p class="card-text lh-sm">@Html.DisplayFor(modelItem => item.Description)</p>

                            <p></p>
                            <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i></a>
                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen-to-square"></i></a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash"></i></a>

                        </div>
                        <div class="card-footer text-muted">
                            <span class="badge text-bg-light">Created at @Html.DisplayFor(modelItem => item.CreatedAt)</span>
                            <span class="badge text-bg-warning">Updated at @Html.DisplayFor(modelItem => item.UpdatedAt)</span>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseThree" aria-expanded="false" aria-controls="panelsStayOpen-collapseThree">

                <span>Production <span class="badge text-bg-success"> @Production.Where(model => model.Enabled).Count()</span> <span class="badge text-bg-danger"> @Production.Where(model => !model.Enabled).Count()</span></span>
            </button>
        </h2>
        <div id="panelsStayOpen-collapseThree" class="accordion-collapse collapse">
            <div class="accordion-body">
                @if (Production.Count() == 0)
                {
                    <p class="text-center">No synapse templates available!</p>
                }
                @foreach (var item in Production)
                {
                    <div class="card text-center" style="width:20rem;">
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name) @Html.DisplayFor(modelItem => item.Model)</h5>
                            <p class="card-text"></p>
                            <h6 class="card-subtitle mb-2 text-body-secondary">
                                @if (item.Enabled)
                                {
                                    <span class="badge text-bg-success">Active</span>
                                }
                                else
                                {

                                    <span class="badge text-bg-danger">Inactive</span>
                                }
                                <span class="badge text-bg-primary">ID: @Html.DisplayFor(modelItem => item.Id)</span>
                            </h6>
                            <p></p>
                            <p class="card-text lh-sm">@Html.DisplayFor(modelItem => item.Description)</p>

                            <p></p>
                            <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i></a>
                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen-to-square"></i></a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash"></i></a>

                        </div>
                        <div class="card-footer text-muted">
                            <span class="badge text-bg-light">Created at @Html.DisplayFor(modelItem => item.CreatedAt)</span>
                            <span class="badge text-bg-warning">Updated at @Html.DisplayFor(modelItem => item.UpdatedAt)</span>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseFour" aria-expanded="false" aria-controls="panelsStayOpen-collapseFour">
                <span>End Of Life <span class="badge text-bg-success"> @EndOfLife.Where(model => model.Enabled).Count()</span> <span class="badge text-bg-danger"> @EndOfLife.Where(model => !model.Enabled).Count()</span></span>
            </button>
        </h2>
        <div id="panelsStayOpen-collapseFour" class="accordion-collapse collapse">
            <div class="accordion-body">
                @if (EndOfLife.Count() == 0)
                {
                    <p class="text-center">No synapse templates available!</p>
                }
                @foreach (var item in EndOfLife)
                {
                    <div class="card text-center" style="width:20rem;">
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name) @Html.DisplayFor(modelItem => item.Model)</h5>
                            <p class="card-text"></p>
                            <h6 class="card-subtitle mb-2 text-body-secondary">
                                @if (item.Enabled)
                                {
                                    <span class="badge text-bg-success">Active</span>
                                }
                                else
                                {

                                    <span class="badge text-bg-danger">Inactive</span>
                                }
                                <span class="badge text-bg-primary">ID: @Html.DisplayFor(modelItem => item.Id)</span>
                            </h6>
                            <p></p>
                            <p class="card-text lh-sm">@Html.DisplayFor(modelItem => item.Description)</p>

                            <p></p>
                            <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i></a>
                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen-to-square"></i></a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash"></i></a>

                        </div>
                        <div class="card-footer text-muted">
                            <span class="badge text-bg-light">Created at @Html.DisplayFor(modelItem => item.CreatedAt)</span>
                            <span class="badge text-bg-warning">Updated at @Html.DisplayFor(modelItem => item.UpdatedAt)</span>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


